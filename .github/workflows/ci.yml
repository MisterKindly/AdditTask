name: Docker Static IP

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Create Docker net
        run: docker network create --subnet=172.18.0.0/16 mynet

      - name: Run Pyth serv
        run: |
          docker run -d \
            --name server_cont \
            --network mynet \
            --ip 172.18.0.22 \
            -p 2122:2122 \
            ubuntu sleep infinity

          sleep 5

          docker exec server_cont apt-get update
          docker exec server_cont apt-get install -y python3 wget

          docker exec server_cont ls -l /

          docker exec -d server_cont python3 -m http.server 2122 --directory /

          sleep 5

          docker exec server_cont wget --content-on-error -O index.html http://172.18.0.22:2122/

          docker cp server_cont:/index.html .

      - name: Dock client
        run: |
          docker run -d \
            --name client_cont \
            --network mynet \
            ubuntu sleep infinity

          sleep 2

          docker exec client_cont apt-get update
          docker exec client_cont apt-get install -y wget

          docker exec client_cont wget http://172.18.0.22:2122/ -O /index_dock2.html

          docker cp client_cont:/index_dock2.html .

          docker stop client_cont
          docker rm client_cont

      - name: Download from runner
        run: |
          wget http://localhost:2122/ -O index_runner.html

      - name: Save artifact
        run: |
          mkdir -p artifacts
          docker cp server_cont:/index.html artifacts/
          mv index_dock2.html artifacts/
          mv index_runner.txt artifacts/


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
         name: homepage
         path: artifacts/


      - name: Clean
        if: always()
        run: |
          docker stop server_cont || true
          docker rm server_cont || true
          docker network rm mynet || true
